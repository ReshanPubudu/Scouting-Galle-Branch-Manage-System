/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.scouthq.view;

import edu.ijse.scouthq.controller.ControllerFactory;
import edu.ijse.scouthq.controller.custom.CoreBadgeController;
import edu.ijse.scouthq.controller.custom.MemberController;
//import edu.ijse.scouthq.controller.custom.RoverController;
import edu.ijse.scouthq.dao.custom.impl.CoreBadgeDAOImpl;
import edu.ijse.scouthq.dao.custom.impl.RegistrationCategoryDAOImpl;
//import edu.ijse.scouthq.dao.custom.impl.RoverDAOImpl;
import edu.ijse.scouthq.dto.CoreBadgeDTO;
import edu.ijse.scouthq.dto.MemberDTO;
import edu.ijse.scouthq.dto.RoverDTO;
import static edu.ijse.scouthq.view.DiningArea.viewWhatPane;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Reshan Pubudu
 */
public class CorePassedPane extends javax.swing.JPanel {
    MemberController ctrlMember;
    //RoverController ctrlRover;
    CoreBadgeController ctrlCore;
    /**
     * Creates new form CoreUpdatePane
     */
    public CorePassedPane() {
        initComponents();
        //ctrlMember = new MemberControllerImpl();
        ctrlMember = (MemberController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.MEMBER);
        //ctrlRover = (RoverController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ROVER);
        ctrlCore = (CoreBadgeController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.COREBADGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scoutIdlbl = new javax.swing.JLabel();
        regIdCmb = new javax.swing.JComboBox<>();
        scouNametxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        badgeIdCmb = new javax.swing.JComboBox<>();
        badgeNameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dateTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTxt = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);

        scoutIdlbl.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        scoutIdlbl.setText("Scout Id");

        regIdCmb.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        regIdCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                regIdCmbItemStateChanged(evt);
            }
        });
        regIdCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regIdCmbActionPerformed(evt);
            }
        });

        scouNametxt.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        scouNametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scouNametxtActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Badge Id");

        badgeIdCmb.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        badgeIdCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                badgeIdCmbItemStateChanged(evt);
            }
        });
        badgeIdCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                badgeIdCmbActionPerformed(evt);
            }
        });

        badgeNameTxt.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        badgeNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                badgeNameTxtActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Passed Date");

        dateTxt.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        dateTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dateTxtFocusGained(evt);
            }
        });
        dateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTxtActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Finish");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        descriptionTxt.setColumns(20);
        descriptionTxt.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        descriptionTxt.setRows(5);
        descriptionTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                descriptionTxtMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(descriptionTxt);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Description");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText(":");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText(":");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText(":");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText(":");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(590, 590, 590)
                .addComponent(jButton1)
                .addGap(10, 10, 10)
                .addComponent(jButton2)
                .addGap(235, 235, 235))
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(scoutIdlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(regIdCmb, 0, 86, Short.MAX_VALUE)
                            .addComponent(badgeIdCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(badgeNameTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scouNametxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regIdCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scoutIdlbl)
                    .addComponent(scouNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(badgeIdCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(badgeNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void regIdCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regIdCmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regIdCmbActionPerformed

    private void badgeIdCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_badgeIdCmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_badgeIdCmbActionPerformed

    private void dateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTxtActionPerformed
        viewWhatPane.setVisible(false);
    }//GEN-LAST:event_dateTxtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        viewWhatPane.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        viewWhatPane.setVisible(false);
        String regId = (String) regIdCmb.getSelectedItem();
        String badgeId = (String) badgeIdCmb.getSelectedItem();
        String date = dateTxt.getText();
        String description = descriptionTxt.getText();
        
        ConformationForm.passRegId = regId;
        ConformationForm.passBadgeId = badgeId;
        ConformationForm.passDate = date;
        ConformationForm.passDescription = description;
        ConformationForm.sc = "Member Core Badge Update";
        new ConformationForm().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void regIdCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_regIdCmbItemStateChanged
        viewWhatPane.setVisible(false);
        try {
            String id = (String) regIdCmb.getSelectedItem();
            String cat = (String) NewBadgePassedPane.catCmb.getSelectedItem();
            //if(cat.equals("Cub Scout")|| cat.equals("Boy Scout")||cat.equals("Girl Scout")){
                MemberDTO memberDTO = ctrlMember.search(id);
                String name = memberDTO.getNameInit();     
                scouNametxt.setText(name);
            //}
//            if(cat.equals("Rover Scout")){
//                RoverDTO roverDTO = ctrlRover.search(id);
//                String name = roverDTO.getNameInit();
//                scouNametxt.setText(name);
//            }
            
        } catch (Exception ex) {
            Logger.getLogger(CorePassedPane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_regIdCmbItemStateChanged

    private void badgeIdCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_badgeIdCmbItemStateChanged
        viewWhatPane.setVisible(false);
        try {
            String id = (String) badgeIdCmb.getSelectedItem();
            CoreBadgeDTO coreBadgeDTO = ctrlCore.search(id);
            String badgeName = coreBadgeDTO.getBadgeName();
            badgeNameTxt.setText(badgeName);
        } catch (Exception ex) {
            Logger.getLogger(CorePassedPane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_badgeIdCmbItemStateChanged

    private void scouNametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scouNametxtActionPerformed
        viewWhatPane.setVisible(false);
    }//GEN-LAST:event_scouNametxtActionPerformed

    private void badgeNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_badgeNameTxtActionPerformed
        viewWhatPane.setVisible(false);
    }//GEN-LAST:event_badgeNameTxtActionPerformed

    private void descriptionTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_descriptionTxtMouseClicked
        viewWhatPane.setVisible(false);
    }//GEN-LAST:event_descriptionTxtMouseClicked

    private void dateTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateTxtFocusGained
        //dateTxt.set"xx");
    }//GEN-LAST:event_dateTxtFocusGained

    public void setAllId(String type){
            try {
                String cat = "";
                if(type.equals("Cub Scout")){
                    cat = "CSC01";
                }
                if(type.equals("Boy Scout")){
                    cat = "BSC01";
                }
                if(type.equals("Girl Scout")){
                    cat = "GSC01";
                }
                if(type.equals("Rover Scout")){
                    cat = "RSC01";
                }
                //if(type.equals("Cub Scout")|| type.equals("Boy Scout")||type.equals("Girl Scout")){
                    ArrayList<MemberDTO> memberDTO =  new RegistrationCategoryDAOImpl().serchAndGetAllId(cat);
                    for(MemberDTO membrDto : memberDTO){
                        regIdCmb.addItem(membrDto.getRegId());
                    }
//                //}
//                if(type.equals("Rover Scout")){
//                    ArrayList<RoverDTO> roverDTO =  new RoverDAOImpl().serchAndGetAllId();
//                    for(RoverDTO roverDto : roverDTO){
//                        regIdCmb.addItem(roverDto.getRegId());
//                    }
//                }
            } catch (Exception ex) {
                Logger.getLogger(BoyRegistrationPane.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    public void setAllCoreBadgeId(String type){
            try {
                String cat = "";
                if(type.equals("Cub Scout")){
                    cat = "CSC01";
                }
                if(type.equals("Boy Scout")||type.equals("Girl Scout")){
                    cat = "BSC01";
                }
                if(type.equals("Rover Scout")){
                    cat = "RSC01";
                }
                ArrayList<CoreBadgeDTO> coreBadgeDTO = new CoreBadgeDAOImpl().searchAndGetAllId(cat);
                for(CoreBadgeDTO coreBadgeDTO1 : coreBadgeDTO){
                    badgeIdCmb.addItem(coreBadgeDTO1.getBadgeId());
                }
                
            } catch (Exception ex) {
                Logger.getLogger(BoyRegistrationPane.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> badgeIdCmb;
    private javax.swing.JTextField badgeNameTxt;
    private javax.swing.JTextField dateTxt;
    private javax.swing.JTextArea descriptionTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> regIdCmb;
    private javax.swing.JTextField scouNametxt;
    public static javax.swing.JLabel scoutIdlbl;
    // End of variables declaration//GEN-END:variables
}
